{
  "version": "1.5.0", 
  "nickname": "DecnstrAllDF", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "all_stories", 
        "description": "Script variable Python", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "all_room2ds", 
        "description": "Script variable Python", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_df_obj", 
      "description": "A Dragonfly Building, Story or Room2D to be deconstructed into\nall of its constituent objects. Note that, Room2Ds do not have\nsub-objects assigned to them and the original object will be output.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Create", 
  "code": "\ntry:  # import the core dragonfly dependencies\n    from dragonfly.building import Building\n    from dragonfly.story import Story\n    from dragonfly.room2d import Room2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\ndef deconstruct_story(story, stories, room2ds):\n    \"\"\"Deconstruct Story object.\"\"\"\n    stories.append(story)\n    room2ds.extend(story.room_2ds)\n\ndef deconstruct_building(bldg, stories, room2ds):\n    \"\"\"Deconstruct Building object.\"\"\"\n    for story in bldg.all_stories():\n        deconstruct_story(story, stories, room2ds)\n\n\nif all_required_inputs(ghenv.Component):\n    # lists to be filled with constituent objects\n    all_stories = []\n    all_room2ds = []\n    \n    if isinstance(_df_obj, Building):\n        deconstruct_building(_df_obj, all_stories, all_room2ds)\n    elif isinstance(_df_obj, Story):\n        deconstruct_story(_df_obj, all_stories, all_room2ds)\n    elif isinstance(_df_obj, Story):\n        all_room2ds.append(_df_obj)\n    else:\n        raise TypeError(\n            'Unrecognized dragonfly object type: {}'.format(type(_df_obj)))\n", 
  "category": "Dragonfly", 
  "name": "DF Deconstruct All Object", 
  "description": "Deconstruct any Dragonfly geometry object into ALL of its constituent Dragonfly objects.\n_\nThis is useful for editing auto-generated child objects separately from their parent.\nFor example, if you want to assign all of the ground floors of a given auto-generated\nBuilding to have a Retail ProgramType, this can give you all of such Stories. Then\nyou can assign a Retail ProgramType to them and combine them with the other Stories\ninto a new Building.\n-"
}