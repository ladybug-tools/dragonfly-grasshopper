{
  "version": "1.8.1", 
  "nickname": "OpenDSSResult", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "factors", 
        "description": "A list of data collections containing the dimensionless fractional values\nfrom the CSV results. For buildings, these represent the voltage\nat a given timestep divided by the standard outlet voltage (120 V).\nFor transformers and connectors, these represent the power along\nthe wire or transformer divided by the kVA rating of the object.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "condition", 
        "description": "A list of data collections noting the condition of a given object.\nFor example, whether the object is over or under voltage (in the\ncase of a building) or whether it is overloaded (in the case of\na transformer or electrical connector).", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_dss_csv", 
      "description": "The file path of any CSV result file that has been generated from\nan OpenDSS simulation. This can be either a Building CSV with voltage\ninformation or transformers/connectors with loading information.", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "4 :: Electric Grid", 
  "code": "\ntry:\n    from dragonfly_energy.opendss.result import OpenDSSResult\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly_energy:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    result_obj = OpenDSSResult(_dss_csv)\n    factors = result_obj.factor_data\n    condition = result_obj.condition_data\n", 
  "category": "Dragonfly", 
  "name": "DF Read OpenDSS Result", 
  "description": "Parse any CSV file output from an OpenDSS simulation.\n-"
}