{
  "version": "1.4.0", 
  "nickname": "DumpObjects", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "df_file", 
        "description": "The location of the file where the dragonfly JSON is saved.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_df_objs", 
      "description": "A list of Dragonfly objects to be written to a file.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "A name for the file to which the dragonfly objects will be\nwritten. (Default: 'unnamed').", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_folder_", 
      "description": "An optional directory into which the dragonfly objects will be\nwritten.  The default is set to the default simulation folder.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "indent_", 
      "description": "An optional positive integer to set the indentation used in the\nresulting JSON file.", 
      "type": "int", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "abridged_", 
      "description": "Set to \"True\" to serialize the object in its abridged form.\nAbridged objects cannot be reserialized back to dragonfly objects\non their own but they are used throughout dragonfly to minimize\nfile size and unnecessary duplication.", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_dump", 
      "description": "Set to \"True\" to save the dragonfly objects to file.", 
      "type": "bool", 
      "default": null
    }
  ], 
  "subcategory": "2 :: Serialize", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.config import folders\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the core dragonfly dependencies\n    from dragonfly.model import Model\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:  # import the core ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nimport os\nimport json\n\n\nif all_required_inputs(ghenv.Component) and _dump:\n    # set the component defaults\n    name = _name_ if _name_ is not None else 'unnamed'\n    file_name = '{}.json'.format(name)  if len(_df_objs) > 1 or not \\\n        isinstance(_df_objs[0], Model) else '{}.dfjson'.format(name)\n    folder = _folder_ if _folder_ is not None else folders.default_simulation_folder\n    df_file = os.path.join(folder, file_name)\n    abridged = bool(abridged_)\n\n    # create the dictionary to be written to a JSON file\n    if len(_df_objs) == 1:  # write a single object into a file if the length is 1\n        try:\n            obj_dict = _df_objs[0].to_dict(abridged=abridged)\n        except TypeError:  # no abridged option\n            obj_dict = _df_objs[0].to_dict()\n    else:  # create a dictionary of the objects that are indexed by name\n        obj_dict = {}\n        for obj in _df_objs:\n            try:\n                obj_dict[obj.identifier] = obj.to_dict(abridged=abridged)\n            except TypeError:  # no abridged option\n                obj_dict[obj.identifier] = obj.to_dict()\n\n    # write the dictionary into a file\n    with open(df_file, 'w') as fp:\n        json.dump(obj_dict, fp, indent=indent_)\n", 
  "category": "Dragonfly", 
  "name": "DF Dump Objects", 
  "description": "Dump any dragonfly object to a JSON file. You can use \"DF Load Objects\" component\nto load the objects from the file back into Grasshopper.\n-\nThis includes any Model, Building, Story, Room2D, WindowParameter, or ShadingParameter.\n-\nIt also includes any energy Material, Construction, ConstructionSet, Schedule,\nLoad, ProgramType, or Simulation object.\n-"
}