{
  "version": "1.6.0", 
  "nickname": "BCByOrient", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "df_obj", 
        "description": "The input Dragonfly object with the wall boundary conditions changed.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_df_obj", 
      "description": "A Dragonfly Building, Story or Room2D which will have boundary conditions\nassigned to its walls according to the inputs below.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "list", 
      "name": "adiabatic_", 
      "description": "A list of Booleans to denote whether exterior walls of a given\norientation should be set to adiabatic. Different adiabatic\nvalues will be assigned based on the cardinal direction,\nstarting with north and moving clockwise. The \"HB Facade\nParameters\" component can be used to order this list correctly\nfor four main orientations.", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "list", 
      "name": "ground_", 
      "description": "A list of Booleans to denote whether exterior walls of a given\norientation should be set to ground. Different ground\nvalues will be assigned based on the cardinal direction,\nstarting with north and moving clockwise. The \"HB Facade\nParameters\" component can be used to order this list correctly\nfor four main orientations.", 
      "type": "bool", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Create", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.boundarycondition import boundary_conditions, Outdoors\n    from honeybee.orientation import angles_from_num_orient, orient_index\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the core dragonfly dependencies\n    from dragonfly.building import Building\n    from dragonfly.story import Story\n    from dragonfly.room2d import Room2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\ndef extract_room_2ds(df_objs):\n    \"\"\"Extract the Room2Ds from any dragonfly objects (Building, Story, etc.)\"\"\"\n    rooms = []\n    for obj in df_objs:\n        if isinstance(obj, Building):\n            rooms.extend(obj.unique_room_2ds)\n        elif isinstance(obj, Story):\n            rooms.extend(obj.room_2ds)\n        elif isinstance(obj, Room2D):\n            rooms.append(obj)\n    return rooms\n\n\ndef apply_boundary_condition(rooms, bc_list, bc_to_assign):\n    \"\"\"Apply a boundary condition list to the dragonfly objects.\"\"\"\n    angles = angles_from_num_orient(len(bc_list))\n    rooms = extract_room_2ds(df_obj)\n    for room in rooms:\n        room_bcs, room_glz = [], []\n        zip_props = zip(room.boundary_conditions, room.window_parameters,\n                        room.segment_orientations())\n        for bc, glz, orient in zip_props:\n            orient_i = orient_index(orient, angles)\n            use_ad = bc_list[orient_i] if isinstance(bc, Outdoors) else None\n            final_bc = bc_to_assign if use_ad else bc\n            room_bcs.append(final_bc)\n            final_glz = None if use_ad else glz\n            room_glz.append(final_glz)\n        room.window_parameters = room_glz\n        room.boundary_conditions = room_bcs\n\n\nif all_required_inputs(ghenv.Component):\n    # duplicate the initial objects\n    df_obj = [obj.duplicate() for obj in _df_obj]\n    rooms = extract_room_2ds(df_obj)\n\n    # add the adiabatic parameters\n    if len(adiabatic_) != 0:\n        apply_boundary_condition(rooms, adiabatic_, boundary_conditions.adiabatic)\n\n    # add the ground parameters\n    if len(ground_) != 0:\n        apply_boundary_condition(rooms, ground_, boundary_conditions.ground)\n", 
  "category": "Dragonfly", 
  "name": "DF BC by Orientation", 
  "description": "Make boundary conditions of Dragonfly Room2Ds Adiabatic or Ground by oreintation.\n_\nNote that this component will remove windows for any wall segment that is set to\nhave an Adiabatic or Ground boundary condition.\n-"
}