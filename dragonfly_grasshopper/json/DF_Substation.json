{
  "version": "1.2.0", 
  "nickname": "Substation", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "substation", 
        "description": "A Dragonfly Substation object that can be used within an\nElectrical Network.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_geo", 
      "description": "A horizontal Rhino surface representing a footprint to be converted\ninto a Substation.", 
      "type": "Curve", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "Text to set the name for the Substation, which will also be incorporated\ninto unique Substation identifier.  If the name is not provided,\na random one will be assigned.", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Energy", 
  "code": "\ntry:  # import the core honeybee dependencies\n    from honeybee.typing import clean_ep_string\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the core dragonfly_energy dependencies\n    from dragonfly_energy.opendss.substation import Substation\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly_energy:\\n\\t{}'.format(e))\n\ntry:  # import ladybug-{{cad}}\n    from ladybug_{{cad}}.togeometry import to_polygon2d\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    name = clean_string(_name_) if _name_ is not None else 'unnamed'\n    substation = Substation(name, to_polygon2d(_geo))\n    if _name_ is not None:\n        substation.display_name = _name_\n", 
  "category": "Dragonfly", 
  "name": "DF Substation", 
  "description": "Create an OpenDSS Substation from its footprint geometry (horizontal Rhino surfaces).\n-"
}