{
  "version": "1.9.0", 
  "nickname": "ApplyRoof", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "df_obj", 
        "description": "The input Dragonfly objects with the roof geometry assigned to them.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_df_obj", 
      "description": "A Dregonfly Story or Building to which the roof geometry is assigned.\nWhen a building is plugged in, only one story will receive the roof\ngeometry, which will be the top floor unless an explicit _story_i_\nis specified below. This input can also be an entire Dragonfly Model,\nin which case the relevant Story of the first Building will receive the\nroof geometry, indicating that a Model inputs are really only\nappropriate when the Model contains one Building.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "list", 
      "name": "_roof_geo", 
      "description": "A list of Breps representing the geometry of the Roof.\nTogether, these Breps should completely cover the Room2Ds of the\nStory to which they are assigned.", 
      "type": "Brep", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_story_i_", 
      "description": "An optional integer to set the index of the Story to which the Roof\nshould be assigned. If unspecified, the roof geometry will be added\nto the top floor of any connected Building or Model.", 
      "type": "int", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Create", 
  "code": "\ntry:  # import the core dragonfly dependencies\n    from dragonfly.roof import RoofSpecification\n    from dragonfly.model import Model\n    from dragonfly.building import Building\n    from dragonfly.story import Story\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.config import tolerance\n    from ladybug_{{cad}}.togeometry import to_face3d\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, give_warning\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # set the default sotry index\n    _story_i_ = _story_i_ if _story_i_ is not None else -1\n\n    # create the RoofSpecification from the input geometry\n    face3ds = []\n    for geo_obj in _roof_geo:\n        face3ds.extend(to_face3d(geo_obj))\n    roof = RoofSpecification(face3ds)\n\n    # duplicate the input object and assign the roof to it\n    df_obj = _df_obj.duplicate()\n    if isinstance(df_obj, Story):\n        df_obj.roof = roof\n    elif isinstance(df_obj, Building):\n        df_obj[_story_i_].roof = roof\n    elif isinstance(df_obj, Model):\n        df_obj.buildings[0][_story_i_].roof = roof\n    else:\n        msg = 'Expected Dragonfly Story, Building, or Model. Got {}'.format(type(df_obj))\n        print(msg)\n        raise ValueError(msg)\n", 
  "category": "Dragonfly", 
  "name": "DF Apply Roof", 
  "description": "Assign Roof geometry to a Dragonfly Story, Building, or Model.\n_\nThis can be used to generate sloped roofs over a Story. The roof geometry will only\naffect the Room2Ds that have a True is_top_exposed property and it will only be\nutilized in translation to Honeybee when the Story multiplier is 1.\n_\nMultiple sucessive versions of this component can be used to assign different\nroof specifications for different Stories of a Dragonfly Building or Model.\n-"
}