{
  "version": "1.1.0", 
  "nickname": "ReassignProp", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "df_obj", 
        "description": "The input Dragonfly object with its properties re-assigned based\non the input.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_df_obj", 
      "description": "A Dragonfly Building, Story or Room2D which is to have its energy\nproperties re-assigned.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "program_", 
      "description": "Text to reassign the program of the input objects (to be looked\nup in the ProgramType library) such as that output from the \"HB List\nPrograms\" component. This can also be a custom ProgramType object.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "constr_set_", 
      "description": "Text to reassign construction set of the input objects, which\nis usedto assign all default energy constructions needed to create an\nenergy model. Text should refer to a ConstructionSet within the library\nsuch as that output from the \"HB List Construction Sets\" component.\nThis can also be a custom ConstructionSet object.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Energy", 
  "code": "\ntry:  # import the core dragonfly dependencies\n    from dragonfly.building import Building\n    from dragonfly.story import Story\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:  # import ladybug-{{cad}}\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\ntry:  # import the honeybee-energy extension\n    from honeybee_energy.lib.programtypes import program_type_by_identifier\n    from honeybee_energy.lib.constructionsets import construction_set_by_identifier\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy energy:\\n\\t{}'.format(e))\n\ntry:  # import the dragonfly-energy extension\n    import dragonfly_energy\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly_energy energy:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # duplicate the initial objects\n    df_obj = _df_obj.duplicate()\n\n    # try to assign the program\n    if program_ is not None:\n        if isinstance(program_, str):\n            program_ = program_type_by_identifier(program_)\n        if isinstance(df_obj, (Building, Story)):\n            df_obj.properties.energy.set_all_room_2d_program_type(program_)\n        else:  # it's a Room2D\n            df_obj.properties.energy.program_type = program_\n\n    # try to assign the construction set\n    if constr_set_ is not None:\n        if isinstance(constr_set_, str):\n            constr_set_ = construction_set_by_identifier(constr_set_)\n        df_obj.properties.energy.construction_set = constr_set_\n", 
  "category": "Dragonfly", 
  "name": "DF Reassign Energy Properties", 
  "description": "Re-assign energy properties to any Dragonfly object (Building, Story, Room2D).\n_\nThis is useful for editing auto-generated child objects separately from their parent.\nFor example, if you want to assign all of the ground floors of a given auto-generated\nBuilding to have a Retail ProgramType, this can help re-assign a Retail ProgramType\nto such stories.\n-"
}