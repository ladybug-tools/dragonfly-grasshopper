{
  "version": "1.6.0", 
  "nickname": "DFDetailedHVAC", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "report", 
        "description": "Reports, errors, warnings, etc.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "df_objs", 
        "description": "The input Rooms or Model with the detailed HVAC system applied.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_df_objs", 
      "description": "Dragonfly Buildings, Stories or Room2Ds to which the input Ironbug HVAC\nwill be assigned. This can also be an etire dragonfly Model.\nOnly the relevant Room2Ds referenced in the _hvac_system will be\nassigned the HVAC system.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_hvac_system", 
      "description": "A fully-detailed Irongbug HVAC system to be assigned to the\ninput dragonfly objects.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "Text to set the name for the HVAC system and to be incorporated into\nunique HVAC identifier. If the name is not provided, a random name\nwill be assigned.", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Energy", 
  "code": "\nimport json\n\ntry:  # import the honeybee extension\n    from honeybee.typing import clean_and_id_ep_string, clean_ep_string\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the honeybee-energy extension\n    from honeybee_energy.config import folders\n    from honeybee_energy.hvac.detailed import DetailedHVAC\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\ntry:  # import the core dragonfly dependencies\n    from dragonfly.model import Model\n    from dragonfly.building import Building\n    from dragonfly.story import Story\n    from dragonfly.room2d import Room2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs, give_warning\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nif folders.ironbug_exe is None:\n    msg = 'An installation of Ironbug that is compatible with this component\\n' \\\n        'was not found on this machine. This component will not be usable.'\n    print(msg)\n    give_warning(ghenv.Component, msg)\nelif folders.ironbug_version is not None:\n    if folders.ironbug_version < (1, 5, 8):\n        msg = 'Ironbug version \"{}\" is not compatible with this component.\\n' \\\n            'This component will not be usable.'.format(\n                '.'.join([str(i) for i in folders.ironbug_version]))\n        print(msg)\n        give_warning(ghenv.Component, msg)\n\n\nif all_required_inputs(ghenv.Component):\n    # extract any rooms from the inputs and duplicate the rooms\n    rooms, df_objs = [], []\n    for df_obj in _df_objs:\n        if isinstance(df_obj, Room2D):\n            new_obj = df_obj.duplicate()\n            df_objs.append(new_obj)\n            rooms.append(new_obj)\n        elif isinstance(df_obj, (Story, Model)):\n            new_obj = df_obj.duplicate()\n            df_objs.append(new_obj)\n            rooms.extend(new_obj.room_2ds)\n        elif isinstance(df_obj, Building):\n            new_obj = df_obj.duplicate()\n            df_objs.append(new_obj)\n            rooms.extend(new_obj.unique_room_2ds)\n        else:\n            raise ValueError(\n                'Expected Dragonfly Room2D, Story, Building or Model. '\n                'Got {}.'.format(type(hb_obj)))\n\n    # create the HVAC\n    name = clean_and_id_ep_string('Detailed HVAC') if _name_ is None else \\\n        clean_ep_string(_name_)\n    specification = json.loads(_hvac_system.ToJson())\n    hvac = DetailedHVAC(name, specification)\n    if _name_ is not None:\n        hvac.display_name = _name_\n\n    # apply the HVAC system to the rooms\n    hvac_rooms = set(hvac.thermal_zones)\n    hvac_count, rel_rooms = 0, []\n    for room in rooms:\n        if room.identifier in hvac_rooms:\n            room.properties.energy.hvac = hvac\n            rel_rooms.append(room.identifier)\n            hvac_count += 1\n\n    # give a warning if no rooms were assigned the HVAC or if there are missing rooms\n    if hvac_count == 0:\n        msg = 'None of the connected Rooms are referenced under the Ironbug HVAC system.\\n' \\\n            'Make sure that the system has been set up with the correct Rooms.'\n        print(msg)\n        give_warning(ghenv.Component, msg)\n    if len(rel_rooms) != len(hvac_rooms):\n        missing_rooms = []\n        found_rooms = set(rel_rooms)\n        for rm_id in hvac_rooms:\n            if rm_id not in found_rooms:\n                missing_rooms.append(rm_id)\n        msg = 'The Ironbug HVAC system contains the following rooms that are not ' \\\n            'in the connected _hb_objs.\\n{}'.format('\\n'.join(missing_rooms))\n        print(msg)\n        give_warning(ghenv.Component, msg)\n", 
  "category": "Dragonfly", 
  "name": "DF Detailed HVAC", 
  "description": "Apply a detailed Ironbug HVAC to Dragonfly Buildings, Stories or Room2Ds.\n-"
}