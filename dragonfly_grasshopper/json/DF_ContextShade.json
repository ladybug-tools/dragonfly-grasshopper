{
  "version": "1.0.0", 
  "nickname": "Context", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "context", 
        "description": "Dragonfly ContextShades.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_geo", 
      "description": "Rhino Brep geometry.", 
      "type": "GeometryBase", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "A name for the ContextShade. If the name is not provided a random\nname will be assigned.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "ep_constr_", 
      "description": "Optional text for the ContextShade's energy construction to be looked\nup in the construction library. This can also be a custom construction\nobject. If no energy construction is input here, a default will be\nassigned.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "ep_trans_sch_", 
      "description": "Optional text for the ContextShade's energy transmittance\nschedule to be looked up in the schedule library. This can also be a\ncustom schedule object. If no energy schedule is input here, the default\nwill be always opaque.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Create", 
  "code": "\nimport uuid\n\ntry:  # import the core dragonfly dependencies\n    from dragonfly.context import ContextShade\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.togeometry import to_face3d\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\ntry:  # import the honeybee-energy extension\n    from honeybee_energy.lib.constructions import shade_construction_by_name\n    from honeybee_energy.lib.schedules import schedule_by_name\nexcept ImportError as e:\n    if ep_constr_ is not None:\n        raise ValueError('ep_constr_ has been specified but honeybee-energy '\n                         'has failed to import.\\n{}'.format(e))\n    elif ep_trans_sch_ is not None:\n        raise ValueError('ep_trans_sch_ has been specified but honeybee-energy '\n                         'has failed to import.\\n{}'.format(e))\n\ntry:  # import the dragonfly-energy extension\n    import dragonfly_energy\nexcept ImportError as e:\n    if ep_constr_ is not None:\n        raise ValueError('ep_constr_ has been specified but dragonfly-energy '\n                         'has failed to import.\\n{}'.format(e))\n    elif ep_trans_sch_ is not None:\n        raise ValueError('ep_trans_sch_ has been specified but dragonfly-energy '\n                         'has failed to import.\\n{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    context = []  # list of context shades that will be returned\n    \n    # set default name\n    name = _name_ if _name_ is not None else str(uuid.uuid4())\n    \n    # create the ContextShades\n    for i, geo in enumerate(_geo):\n        lb_faces = to_face3d(geo)\n        df_shd = ContextShade('{}_{}'.format(name, i), lb_faces)\n        \n        # try to assign the energyplus construction\n        if ep_constr_ is not None:\n            if isinstance(ep_constr_, str):\n                ep_constr_ = shade_construction_by_name(ep_constr_)\n            df_shd.properties.energy.construction = ep_constr_\n        \n        # try to assign the energyplus transmittance schedule\n        if ep_trans_sch_ is not None:\n            if isinstance(ep_trans_sch_, str):\n                ep_trans_sch_ = schedule_by_name(ep_trans_sch_)\n            df_shd.properties.energy.transmittance_schedule = ep_trans_sch_\n        \n        context.append(df_shd)  # collect the final ContextShades", 
  "category": "Dragonfly", 
  "name": "DF ContextShade", 
  "description": "Create Dragonfly ContextShade.\n-"
}