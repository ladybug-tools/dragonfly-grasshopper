{
  "version": "1.2.0", 
  "nickname": "IntRoom2D", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "int_room2ds", 
        "description": "An array of Room2Ds that have been intersected with one another.\nNote that these Room2Ds lack all assigned boundary conditions, glazing\nparameters and shading parameters of the original Room2Ds.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_room2ds", 
      "description": "A list of Room2Ds for which adjacencent segments will be\nintersected.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_run", 
      "description": "Set to True to run the component.", 
      "type": "bool", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Create", 
  "code": "\n\ntry:  # import the core dragonfly dependencies\n    from dragonfly.room2d import Room2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:  # import the ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.config import tolerance\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\n# add an compile toggle, set _compile to True to run the function\nif all_required_inputs(ghenv.Component) and _run:\n    int_room2ds = Room2D.intersect_adjacency(_room2ds, tolerance)", 
  "category": "Dragonfly", 
  "name": "DF Intersect Room2Ds", 
  "description": "Take a list of Dragonfly Room2Ds and split their adjacent Walls to ensure that\nthere are matching segments between each of the adjacent Room2Ds.\n_\nNote that this component effectively erases all assigned boundary conditions,\nglazing parameters and shading parameters as the original segments are\nsubdivided. As such, it is recommended that this component be used before all\nother steps when creating a Story.\n_\nAlso note that this component does not actually set the walls that are next to one\nanother to be adjacent. The \"DF Solve Adjacency\" component must be used for this\nafter runing this component.\n-"
}