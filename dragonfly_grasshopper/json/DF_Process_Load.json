{
  "version": "1.5.0", 
  "nickname": "DFProcess", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "df_obj", 
        "description": "The input Rooms with process loads assigned to them.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_df_obj", 
      "description": "A Dragonfly Room2D, Story or Building to which process loads should\nbe assigned.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "Text to set the name for the Process load and to be incorporated into a\nunique Process load identifier. If None, a unique name will be\ngenerated.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_watts", 
      "description": "A number for the process load power in Watts.", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_schedule", 
      "description": "A fractional schedule for the use of the process over the course of\nthe year. The fractional values will get multiplied by the _watts\nto yield a complete process load profile.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_fuel_type", 
      "description": "Text to denote the type of fuel consumed by the process. Using the\n\"None\" type indicates that no end uses will be associated with the\nprocess, only the zone gains. Choose from the following.\n* Electricity\n* NaturalGas\n* Propane\n* FuelOilNo1\n* FuelOilNo2\n* Diesel\n* Gasoline\n* Coal\n* Steam\n* DistrictHeating\n* DistrictCooling\n* OtherFuel1\n* OtherFuel2\n* None", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "use_category_", 
      "description": "Text to indicate the end-use subcategory, which will identify\nthe process load in the EUI output. For example, \u201cCooking\u201d,\n\u201cClothes Drying\u201d, etc. (Default: General).", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "radiant_fract_", 
      "description": "A number between 0 and 1 for the fraction of the total\nprocess load given off as long wave radiant heat. (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "latent_fract_", 
      "description": "A number between 0 and 1 for the fraction of the total\nprocess load that is latent (as opposed to sensible). (Default: 0).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "lost_fract_", 
      "description": "A number between 0 and 1 for the fraction of the total\nprocess load that is lost outside of the zone and the HVAC system.\nTypically, this is used to represent heat that is exhausted directly\nout of a zone (as you would for a stove). (Default: 0).", 
      "type": "double", 
      "default": null
    }
  ], 
  "subcategory": "3 :: Energy", 
  "code": "\ntry:  # import the honeybee extension\n    from honeybee.typing import clean_and_id_ep_string, clean_ep_string\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee:\\n\\t{}'.format(e))\n\ntry:  # import the honeybee-energy extension\n    from honeybee_energy.load.process import Process\n    from honeybee_energy.lib.schedules import schedule_by_identifier\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_energy:\\n\\t{}'.format(e))\n\ntry:  # import the core dragonfly dependencies\n    from dragonfly.model import Model\n    from dragonfly.building import Building\n    from dragonfly.story import Story\n    from dragonfly.room2d import Room2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly:\\n\\t{}'.format(e))\n\ntry:  # import the dragonfly-energy extension\n    import dragonfly_energy\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import dragonfly_energy energy:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    # duplicate the initial object and collect all room2d objects\n    df_obj = _df_obj.duplicate()\n    if isinstance(df_obj, Room2D):\n        rooms = [df_obj]\n    elif isinstance(df_obj, Building):\n        rooms = df_obj.unique_room_2ds\n    elif isinstance(df_obj, (Story, Model)):\n        rooms = df_obj.room_2ds\n    else:\n        raise ValueError('Expected dragonfly Room2D, Story, Building or Model. '\n                         'Got {}.'.format(type(df_obj)))\n\n    # set default values and check the inputs\n    use_category_ = 'Process' if use_category_ is None else use_category_\n    radiant_fract_ = 0.0 if radiant_fract_ is None else radiant_fract_\n    latent_fract_ = 0.0 if latent_fract_ is None else latent_fract_\n    lost_fract_ = 0.0 if lost_fract_ is None else lost_fract_\n    if isinstance(_schedule, str):\n        _schedule = schedule_by_identifier(_schedule)\n\n    # loop through the rooms and assign process loads\n    if _watts != 0:\n        for room in rooms:\n            name = clean_and_id_ep_string('Process') if _name_ is None else \\\n                clean_ep_string(_name_)\n            process = Process(\n                '{}..{}'.format(name, room.identifier), _watts, _schedule,\n                _fuel_type, use_category_, radiant_fract_, latent_fract_, lost_fract_\n            )\n            room.properties.energy.add_process_load(process)\n", 
  "category": "Dragonfly", 
  "name": "DF Process Load", 
  "description": "Apply process loads to a Dragonfly Room2D or all Room2Ds of a Dragonfly Story,\nBuilding or Model.\n_\nExamples of process loads include wood burning fireplaces, kilns, manufacturing\nequipment, and various industrial processes. They can also be used to represent \ncertain specialized pieces of equipment to be separated from the other end uses,\nsuch as MRI machines, theatrical lighting, elevators, etc.\n-"
}